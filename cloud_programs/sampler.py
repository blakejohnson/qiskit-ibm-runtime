from qiskit.quantum_info.primitives.sampler.sampler import Sampler


def main(backend, user_messenger,
         circuits,
         transpile_options=None,
         parameters=None,
         run_options=None,
         skip_transpilation=False
         ):
    
    """Sample distributions generated by given circuits executed on the target backend.
    
    Parameters:
        backend (ProgramBackend): Qiskit backend instance.
        user_messenger (UserMessenger): Used to communicate with the program user.
        circuits: (QuantumCircuit or list): A single list of QuantumCircuits.
        transpile_options (dict): A collection of kwargs passed to transpile().
        parameters (list): Parameters to be bound to the circuits.
        run_options (dict): A collection of kwargs passed to backend.run().
        skip_transpilation (bool): Skip transpiling of circuits, default=False.

    Returns:
        dict: A dictionary with counts, quasiprobabilities, and mitigation_overhead keys.
    """
    sampler = Sampler(
        backend=backend,
        circuits=circuits,
    )
    if skip_transpilation:
        sampler.set_skip_transpilation()
    elif transpile_options:
        sampler.set_transpile_options(**transpile_options)

    run_options = run_options or {}
    raw_result = sampler.run(parameters=parameters, **run_options)
    result = {
        "quasi_dists": raw_result.quasi_dists,
        "shots": raw_result.shots
    }
    return result
