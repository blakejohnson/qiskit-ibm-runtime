{
  "name": "sampler",
  "description": "Generates quasi-probabilities by sampling quantum circuits.",
  "max_execution_time": 10000,
  "spec": {
    "parameters": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "properties": {
        "circuits": {
          "description": "A single or list or dictionary of QuantumCircuits.",
          "type": [
            "array",
            "object"
          ]
        },
        "parameters": {
          "description": "Parameters of the quantum circuits.",
          "type": "array"
        },
        "circuit_indices": {
          "description": "Indices of the circuits to evaluate.",
          "type": "array"
        },
        "parameter_values": {
          "description": "A list of concrete parameters to be bound for each circuit. If specified, it must have the same length as circuit_indices.",
          "type": "array"
        },
        "transpilation_settings": {
          "description": "Transpilation settings.",
          "type": "object"
        },
        "resilience_settings": {
          "description": "Resilience settings.",
          "type": "object"
        },
        "skip_transpilation": {
          "description": "(Deprecated) Whether to skip circuit transpilation.",
          "type": "boolean",
          "default": false
        },
        "run_options": {
          "description": "A collection of key-value pairs identifying the execution options. Acceptable options include: shots, qubit_lo_freq, meas_lo_freq, schedule_los, rep_delay, init_qubits, and use_measure_esp.",
          "type": "object"
        },
        "circuit_ids": {
          "description": "A list of unique IDs of QuantumCircuits.",
          "type": "array"
        }
      },
      "required": [
        "circuits",
        "circuit_indices"
      ]
    },
    "return_values": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "properties": {
        "quasi_dists": {
          "description": "List of quasi-probabilities returned for each circuit.",
          "type": "array"
        },
        "metadata": {
          "description": "Additional metadata.",
          "type": "array"
        }
      }
    }
  },
  "tags": ["primitive"]
}
