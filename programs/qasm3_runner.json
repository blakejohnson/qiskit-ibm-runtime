{
  "name": "qasm3-runner",
  "description": "A runtime program that takes one or more circuits, converts them to OpenQASM3, compiles and executes them. This program can also take and execute one or more OpenQASM3 strings. Note that this program can only run on a backend that supports OpenQASM3.",
  "max_execution_time": 7200,
  "spec": {
    "backend_requirements": {
      "input_allowed": "qasm3"
    },
    "parameters": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "properties": {
        "circuits": {
          "type": [
            "object",
            "array",
            "string"
          ],
          "description": "A circuit/OpenQASM3 string or a list of circuits/OpenQASM3 strings."
        },
        "shots": {
          "description": "Number of repetitions of each circuit, for sampling.",
          "type": "integer",
          "default": 4000
        },
        "meas_level": {
          "description": "The reporting level for measurements results \n: Level 2: Discriminated measurement counts \n Level 1: IQ measurement kernel values.",
          "type": "integer",
          "default": 2
        },
        "meas_return": {
          "description": "Type of measurement data to return. Only applicable for meas_level=1. If 'single' is specified, per-shot information is returned. If 'average' is specified, average measurement output is returned..",
          "type": "string",
          "default": "average"
        },
        "init_qubits": {
          "description": "Enable qubit initialization. If disabled this sets rep_delay and init_num_resets to 0.",
          "type": [
            "boolean"
          ],
          "default": true
        },
        "init_num_resets": {
          "description": "The number of qubit resets to insert before each circuit execution.",
          "type": "integer",
          "default": 3
        },
        "rep_delay": {
          "description": "Specify a number of seconds between circuit executions to allow the qubits to idle for. This is used as a component of qubit initialization to allow the system to relax. If rounds of conditional reset are used to reset the qubits (as set in \"init_num_resets\") this delay will be split up and placed after each round of reset.",
          "type": "number",
          "default": 10e-6
        },
        "init_circuit": {
          "description": "A quantum circuit to execute for initializing qubits before each circuit. If specified, parameters \"init_num_resets\" and \"init_delay\" are ignored.",
          "type": [
            "object"
          ]
        },
        "memory": {
          "description": "Whether to return per-shot measurement bitstrings. Currently only `true` is supported and per-shot results will be reported for all jobs.",
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "circuits"
      ]
    },
    "return_values": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "description": "A RunnerResult object.",
      "type": [
        "object",
        "array"
      ]
    }
  },
  "tags": ["prototype"]
}
